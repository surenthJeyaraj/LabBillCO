// <auto-generated />
// This file was generated by a T4 template.
// Don't change it directly as your change would get overwritten.  Instead, make changes
// to the .tt file (i.e. the T4 template) and save it to regenerate this file.

// Make sure the compiler doesn't complain about missing Xml comments
#pragma warning disable 1591
#region T4MVC

using System;
using System.Diagnostics;
using System.CodeDom.Compiler;
using System.Collections.Generic;
using System.Linq;
using System.Runtime.CompilerServices;
using System.Web;
using System.Web.Hosting;
using System.Web.Mvc;
using System.Web.Mvc.Ajax;
using System.Web.Mvc.Html;
using System.Web.Routing;
using T4MVC;

[GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
public static partial class MVC
{
    public static Web.Controllers.AccountController Account = new Web.Controllers.T4MVC_AccountController();
    public static Web.Controllers.ElmahController Elmah = new Web.Controllers.T4MVC_ElmahController();
    public static Web.Controllers.RemittanceController Remittance = new Web.Controllers.T4MVC_RemittanceController();
    public static Web.Controllers.TransactionController Transaction = new Web.Controllers.T4MVC_TransactionController();
    public static T4MVC.ERAPayerConfigController ERAPayerConfig = new T4MVC.ERAPayerConfigController();
    public static T4MVC.HomeController Home = new T4MVC.HomeController();
    public static T4MVC.SharedController Shared = new T4MVC.SharedController();
}

namespace T4MVC
{
}

namespace T4MVC
{
    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public class Dummy
    {
        private Dummy() { }
        public static Dummy Instance = new Dummy();
    }
}

[GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
internal partial class T4MVC_System_Web_Mvc_ActionResult : System.Web.Mvc.ActionResult, IT4MVCActionResult
{
    public T4MVC_System_Web_Mvc_ActionResult(string area, string controller, string action, string protocol = null): base()
    {
        this.InitMVCT4Result(area, controller, action, protocol);
    }
     
    public override void ExecuteResult(System.Web.Mvc.ControllerContext context) { }
    
    public string Controller { get; set; }
    public string Action { get; set; }
    public string Protocol { get; set; }
    public RouteValueDictionary RouteValueDictionary { get; set; }
}
[GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
internal partial class T4MVC_System_Web_Mvc_JsonResult : System.Web.Mvc.JsonResult, IT4MVCActionResult
{
    public T4MVC_System_Web_Mvc_JsonResult(string area, string controller, string action, string protocol = null): base()
    {
        this.InitMVCT4Result(area, controller, action, protocol);
    }
    
    public string Controller { get; set; }
    public string Action { get; set; }
    public string Protocol { get; set; }
    public RouteValueDictionary RouteValueDictionary { get; set; }
}



namespace Links
{
    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public static class Scripts {
        private const string URLPATH = "~/Scripts";
        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
        public static readonly string _references_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/_references.min.js") ? Url("_references.min.js") : Url("_references.js");
        public static readonly string bootstrap_4_0_0_alpha_6_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/bootstrap-4.0.0-alpha.6.min.js") ? Url("bootstrap-4.0.0-alpha.6.min.js") : Url("bootstrap-4.0.0-alpha.6.js");
        public static readonly string bootstrap_switch_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/bootstrap-switch.min.js") ? Url("bootstrap-switch.min.js") : Url("bootstrap-switch.js");
        public static readonly string bootstrap_bundle_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/bootstrap.bundle.min.js") ? Url("bootstrap.bundle.min.js") : Url("bootstrap.bundle.js");
        public static readonly string bootstrap_bundle_js_map = Url("bootstrap.bundle.js.map");
        public static readonly string bootstrap_bundle_min_js = Url("bootstrap.bundle.min.js");
        public static readonly string bootstrap_bundle_min_js_map = Url("bootstrap.bundle.min.js.map");
        public static readonly string bootstrap_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/bootstrap.min.js") ? Url("bootstrap.min.js") : Url("bootstrap.js");
        public static readonly string bootstrap_js_map = Url("bootstrap.js.map");
        public static readonly string bootstrap_min_js = Url("bootstrap.min.js");
        public static readonly string bootstrap_min_js_map = Url("bootstrap.min.js.map");
        public static readonly string chosen_jquery_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/chosen.jquery.min.js") ? Url("chosen.jquery.min.js") : Url("chosen.jquery.js");
        public static readonly string chosen_jquery_min_js = Url("chosen.jquery.min.js");
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public static class DataTables_1_9_4 {
            private const string URLPATH = "~/Scripts/DataTables-1.9.4";
            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class docs {
                private const string URLPATH = "~/Scripts/DataTables-1.9.4/docs";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class media {
                    private const string URLPATH = "~/Scripts/DataTables-1.9.4/docs/media";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class js {
                        private const string URLPATH = "~/Scripts/DataTables-1.9.4/docs/media/js";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string doc_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/doc.min.js") ? Url("doc.min.js") : Url("doc.js");
                        public static readonly string jquery_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.min.js") ? Url("jquery.min.js") : Url("jquery.js");
                        public static readonly string shBrushJScript_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/shBrushJScript.min.js") ? Url("shBrushJScript.min.js") : Url("shBrushJScript.js");
                        public static readonly string shCore_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/shCore.min.js") ? Url("shCore.min.js") : Url("shCore.js");
                    }
                
                }
            
            }
        
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class extras {
                private const string URLPATH = "~/Scripts/DataTables-1.9.4/extras";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class AutoFill {
                    private const string URLPATH = "~/Scripts/DataTables-1.9.4/extras/AutoFill";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class media {
                        private const string URLPATH = "~/Scripts/DataTables-1.9.4/extras/AutoFill/media";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                        public static class docs {
                            private const string URLPATH = "~/Scripts/DataTables-1.9.4/extras/AutoFill/media/docs";
                            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                            public static class media {
                                private const string URLPATH = "~/Scripts/DataTables-1.9.4/extras/AutoFill/media/docs/media";
                                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                                public static class js {
                                    private const string URLPATH = "~/Scripts/DataTables-1.9.4/extras/AutoFill/media/docs/media/js";
                                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                                    public static readonly string doc_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/doc.min.js") ? Url("doc.min.js") : Url("doc.js");
                                    public static readonly string jquery_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.min.js") ? Url("jquery.min.js") : Url("jquery.js");
                                    public static readonly string shBrushJScript_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/shBrushJScript.min.js") ? Url("shBrushJScript.min.js") : Url("shBrushJScript.js");
                                    public static readonly string shCore_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/shCore.min.js") ? Url("shCore.min.js") : Url("shCore.js");
                                }
                            
                            }
                        
                        }
                    
                        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                        public static class js {
                            private const string URLPATH = "~/Scripts/DataTables-1.9.4/extras/AutoFill/media/js";
                            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                            public static readonly string AutoFill_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/AutoFill.min.js") ? Url("AutoFill.min.js") : Url("AutoFill.js");
                            public static readonly string AutoFill_min_js = Url("AutoFill.min.js");
                            public static readonly string AutoFill_min_js_gz = Url("AutoFill.min.js.gz");
                        }
                    
                    }
                
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class ColReorder {
                    private const string URLPATH = "~/Scripts/DataTables-1.9.4/extras/ColReorder";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class media {
                        private const string URLPATH = "~/Scripts/DataTables-1.9.4/extras/ColReorder/media";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                        public static class docs {
                            private const string URLPATH = "~/Scripts/DataTables-1.9.4/extras/ColReorder/media/docs";
                            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                            public static class media {
                                private const string URLPATH = "~/Scripts/DataTables-1.9.4/extras/ColReorder/media/docs/media";
                                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                                public static class js {
                                    private const string URLPATH = "~/Scripts/DataTables-1.9.4/extras/ColReorder/media/docs/media/js";
                                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                                    public static readonly string doc_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/doc.min.js") ? Url("doc.min.js") : Url("doc.js");
                                    public static readonly string jquery_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.min.js") ? Url("jquery.min.js") : Url("jquery.js");
                                    public static readonly string shBrushJScript_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/shBrushJScript.min.js") ? Url("shBrushJScript.min.js") : Url("shBrushJScript.js");
                                    public static readonly string shCore_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/shCore.min.js") ? Url("shCore.min.js") : Url("shCore.js");
                                }
                            
                            }
                        
                        }
                    
                        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                        public static class js {
                            private const string URLPATH = "~/Scripts/DataTables-1.9.4/extras/ColReorder/media/js";
                            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                            public static readonly string ColReorder_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/ColReorder.min.js") ? Url("ColReorder.min.js") : Url("ColReorder.js");
                            public static readonly string ColReorder_min_js = Url("ColReorder.min.js");
                            public static readonly string ColReorder_min_js_gz = Url("ColReorder.min.js.gz");
                        }
                    
                    }
                
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class ColVis {
                    private const string URLPATH = "~/Scripts/DataTables-1.9.4/extras/ColVis";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class media {
                        private const string URLPATH = "~/Scripts/DataTables-1.9.4/extras/ColVis/media";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                        public static class docs {
                            private const string URLPATH = "~/Scripts/DataTables-1.9.4/extras/ColVis/media/docs";
                            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                            public static class media {
                                private const string URLPATH = "~/Scripts/DataTables-1.9.4/extras/ColVis/media/docs/media";
                                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                                public static class js {
                                    private const string URLPATH = "~/Scripts/DataTables-1.9.4/extras/ColVis/media/docs/media/js";
                                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                                    public static readonly string doc_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/doc.min.js") ? Url("doc.min.js") : Url("doc.js");
                                    public static readonly string jquery_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.min.js") ? Url("jquery.min.js") : Url("jquery.js");
                                    public static readonly string shBrushJScript_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/shBrushJScript.min.js") ? Url("shBrushJScript.min.js") : Url("shBrushJScript.js");
                                    public static readonly string shCore_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/shCore.min.js") ? Url("shCore.min.js") : Url("shCore.js");
                                }
                            
                            }
                        
                        }
                    
                        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                        public static class js {
                            private const string URLPATH = "~/Scripts/DataTables-1.9.4/extras/ColVis/media/js";
                            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                            public static readonly string ColVis_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/ColVis.min.js") ? Url("ColVis.min.js") : Url("ColVis.js");
                            public static readonly string ColVis_min_js = Url("ColVis.min.js");
                            public static readonly string ColVis_min_js_gz = Url("ColVis.min.js.gz");
                        }
                    
                    }
                
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class FixedColumns {
                    private const string URLPATH = "~/Scripts/DataTables-1.9.4/extras/FixedColumns";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class docs {
                        private const string URLPATH = "~/Scripts/DataTables-1.9.4/extras/FixedColumns/docs";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                        public static class media {
                            private const string URLPATH = "~/Scripts/DataTables-1.9.4/extras/FixedColumns/docs/media";
                            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                            public static class js {
                                private const string URLPATH = "~/Scripts/DataTables-1.9.4/extras/FixedColumns/docs/media/js";
                                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                                public static readonly string doc_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/doc.min.js") ? Url("doc.min.js") : Url("doc.js");
                                public static readonly string jquery_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.min.js") ? Url("jquery.min.js") : Url("jquery.js");
                                public static readonly string shBrushJScript_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/shBrushJScript.min.js") ? Url("shBrushJScript.min.js") : Url("shBrushJScript.js");
                                public static readonly string shCore_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/shCore.min.js") ? Url("shCore.min.js") : Url("shCore.js");
                            }
                        
                        }
                    
                    }
                
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class media {
                        private const string URLPATH = "~/Scripts/DataTables-1.9.4/extras/FixedColumns/media";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                        public static class js {
                            private const string URLPATH = "~/Scripts/DataTables-1.9.4/extras/FixedColumns/media/js";
                            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                            public static readonly string FixedColumns_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/FixedColumns.min.js") ? Url("FixedColumns.min.js") : Url("FixedColumns.js");
                            public static readonly string FixedColumns_min_js = Url("FixedColumns.min.js");
                            public static readonly string FixedColumns_min_js_gz = Url("FixedColumns.min.js.gz");
                        }
                    
                    }
                
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class Scroller {
                    private const string URLPATH = "~/Scripts/DataTables-1.9.4/extras/Scroller";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class media {
                        private const string URLPATH = "~/Scripts/DataTables-1.9.4/extras/Scroller/media";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                        public static class docs {
                            private const string URLPATH = "~/Scripts/DataTables-1.9.4/extras/Scroller/media/docs";
                            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                            public static class media {
                                private const string URLPATH = "~/Scripts/DataTables-1.9.4/extras/Scroller/media/docs/media";
                                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                                public static class js {
                                    private const string URLPATH = "~/Scripts/DataTables-1.9.4/extras/Scroller/media/docs/media/js";
                                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                                    public static readonly string doc_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/doc.min.js") ? Url("doc.min.js") : Url("doc.js");
                                    public static readonly string jquery_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.min.js") ? Url("jquery.min.js") : Url("jquery.js");
                                    public static readonly string shBrushJScript_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/shBrushJScript.min.js") ? Url("shBrushJScript.min.js") : Url("shBrushJScript.js");
                                    public static readonly string shCore_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/shCore.min.js") ? Url("shCore.min.js") : Url("shCore.js");
                                }
                            
                            }
                        
                        }
                    
                        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                        public static class js {
                            private const string URLPATH = "~/Scripts/DataTables-1.9.4/extras/Scroller/media/js";
                            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                            public static readonly string dataTables_scroller_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/dataTables.scroller.min.js") ? Url("dataTables.scroller.min.js") : Url("dataTables.scroller.js");
                            public static readonly string dataTables_scroller_min_js = Url("dataTables.scroller.min.js");
                            public static readonly string dataTables_scroller_min_js_gz = Url("dataTables.scroller.min.js.gz");
                        }
                    
                    }
                
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class TableTools {
                    private const string URLPATH = "~/Scripts/DataTables-1.9.4/extras/TableTools";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class media {
                        private const string URLPATH = "~/Scripts/DataTables-1.9.4/extras/TableTools/media";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                        public static class js {
                            private const string URLPATH = "~/Scripts/DataTables-1.9.4/extras/TableTools/media/js";
                            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                            public static readonly string TableTools_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/TableTools.min.js") ? Url("TableTools.min.js") : Url("TableTools.js");
                            public static readonly string TableTools_min_js = Url("TableTools.min.js");
                            public static readonly string TableTools_min_js_gz = Url("TableTools.min.js.gz");
                            public static readonly string ZeroClipboard_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/ZeroClipboard.min.js") ? Url("ZeroClipboard.min.js") : Url("ZeroClipboard.js");
                        }
                    
                    }
                
                }
            
            }
        
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class media {
                private const string URLPATH = "~/Scripts/DataTables-1.9.4/media";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class js {
                    private const string URLPATH = "~/Scripts/DataTables-1.9.4/media/js";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    public static readonly string jquery_dataTables_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.dataTables.min.js") ? Url("jquery.dataTables.min.js") : Url("jquery.dataTables.js");
                    public static readonly string jquery_dataTables_min_js = Url("jquery.dataTables.min.js");
                    public static readonly string jquery_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.min.js") ? Url("jquery.min.js") : Url("jquery.js");
                }
            
            }
        
        }
    
        public static readonly string dataTables_bootstrap_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/dataTables.bootstrap.min.js") ? Url("dataTables.bootstrap.min.js") : Url("dataTables.bootstrap.js");
        public static readonly string daterangepicker_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/daterangepicker.min.js") ? Url("daterangepicker.min.js") : Url("daterangepicker.js");
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public static class esm {
            private const string URLPATH = "~/Scripts/esm";
            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
            public static readonly string popper_utils_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/popper-utils.min.js") ? Url("popper-utils.min.js") : Url("popper-utils.js");
            public static readonly string popper_utils_js_map = Url("popper-utils.js.map");
            public static readonly string popper_utils_min_js = Url("popper-utils.min.js");
            public static readonly string popper_utils_min_js_map = Url("popper-utils.min.js.map");
            public static readonly string popper_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/popper.min.js") ? Url("popper.min.js") : Url("popper.js");
            public static readonly string popper_js_map = Url("popper.js.map");
            public static readonly string popper_min_js = Url("popper.min.js");
            public static readonly string popper_min_js_map = Url("popper.min.js.map");
        }
    
        public static readonly string jquery_2_1_0_intellisense_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery-2.1.0.intellisense.min.js") ? Url("jquery-2.1.0.intellisense.min.js") : Url("jquery-2.1.0.intellisense.js");
        public static readonly string jquery_2_1_0_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery-2.1.0.min.js") ? Url("jquery-2.1.0.min.js") : Url("jquery-2.1.0.js");
        public static readonly string jquery_2_1_0_min_js = Url("jquery-2.1.0.min.js");
        public static readonly string jquery_2_1_0_min_map = Url("jquery-2.1.0.min.map");
        public static readonly string jquery_3_0_0_vsdoc_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery-3.0.0-vsdoc.min.js") ? Url("jquery-3.0.0-vsdoc.min.js") : Url("jquery-3.0.0-vsdoc.js");
        public static readonly string jquery_3_0_0_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery-3.0.0.min.js") ? Url("jquery-3.0.0.min.js") : Url("jquery-3.0.0.js");
        public static readonly string jquery_3_0_0_min_js = Url("jquery-3.0.0.min.js");
        public static readonly string jquery_3_0_0_min_map = Url("jquery-3.0.0.min.map");
        public static readonly string jquery_3_0_0_slim_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery-3.0.0.slim.min.js") ? Url("jquery-3.0.0.slim.min.js") : Url("jquery-3.0.0.slim.js");
        public static readonly string jquery_3_0_0_slim_min_js = Url("jquery-3.0.0.slim.min.js");
        public static readonly string jquery_3_0_0_slim_min_map = Url("jquery-3.0.0.slim.min.map");
        public static readonly string jquery_ui_1_8_24_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery-ui-1.8.24.min.js") ? Url("jquery-ui-1.8.24.min.js") : Url("jquery-ui-1.8.24.js");
        public static readonly string jquery_ui_1_8_24_min_js = Url("jquery-ui-1.8.24.min.js");
        public static readonly string jquery_bootstrap_duallistbox_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.bootstrap-duallistbox.min.js") ? Url("jquery.bootstrap-duallistbox.min.js") : Url("jquery.bootstrap-duallistbox.js");
        public static readonly string jquery_dataTables_columnFilter_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.dataTables.columnFilter.min.js") ? Url("jquery.dataTables.columnFilter.min.js") : Url("jquery.dataTables.columnFilter.js");
        public static readonly string jquery_idletimeout_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.idletimeout.min.js") ? Url("jquery.idletimeout.min.js") : Url("jquery.idletimeout.js");
        public static readonly string jquery_idletimer_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.idletimer.min.js") ? Url("jquery.idletimer.min.js") : Url("jquery.idletimer.js");
        public static readonly string jquery_json_2_4_min_js = Url("jquery.json-2.4.min.js");
        public static readonly string jquery_tablesorter_min_js = Url("jquery.tablesorter.min.js");
        public static readonly string jquery_tablesorter_pager_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.tablesorter.pager.min.js") ? Url("jquery.tablesorter.pager.min.js") : Url("jquery.tablesorter.pager.js");
        public static readonly string jquery_unobtrusive_ajax_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.unobtrusive-ajax.min.js") ? Url("jquery.unobtrusive-ajax.min.js") : Url("jquery.unobtrusive-ajax.js");
        public static readonly string jquery_unobtrusive_ajax_min_js = Url("jquery.unobtrusive-ajax.min.js");
        public static readonly string jquery_validate_vsdoc_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.validate-vsdoc.min.js") ? Url("jquery.validate-vsdoc.min.js") : Url("jquery.validate-vsdoc.js");
        public static readonly string jquery_validate_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.validate.min.js") ? Url("jquery.validate.min.js") : Url("jquery.validate.js");
        public static readonly string jquery_validate_min_js = Url("jquery.validate.min.js");
        public static readonly string jquery_validate_unobtrusive_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.validate.unobtrusive.min.js") ? Url("jquery.validate.unobtrusive.min.js") : Url("jquery.validate.unobtrusive.js");
        public static readonly string jquery_validate_unobtrusive_min_js = Url("jquery.validate.unobtrusive.min.js");
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public static class JqueryAddOn {
            private const string URLPATH = "~/Scripts/JqueryAddOn";
            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
            public static readonly string jquery_3_1_1_slim_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery-3.1.1.slim.min.js") ? Url("jquery-3.1.1.slim.min.js") : Url("jquery-3.1.1.slim.js");
            public static readonly string jquery_ui_1_10_4_custom_min_js = Url("jquery-ui-1.10.4.custom.min.js");
            public static readonly string jquery_easing_1_3_min_js = Url("jquery.easing.1.3.min.js");
            public static readonly string jquery_mousewheel_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.mousewheel.min.js") ? Url("jquery.mousewheel.min.js") : Url("jquery.mousewheel.js");
            public static readonly string jquery_widget_min_js = Url("jquery.widget.min.js");
            public static readonly string jquery_002_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery_002.min.js") ? Url("jquery_002.min.js") : Url("jquery_002.js");
            public static readonly string jquery_003_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery_003.min.js") ? Url("jquery_003.min.js") : Url("jquery_003.js");
        }
    
        public static readonly string jsrender_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jsrender.min.js") ? Url("jsrender.min.js") : Url("jsrender.js");
        public static readonly string knockout_2_2_0_debug_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/knockout-2.2.0.debug.min.js") ? Url("knockout-2.2.0.debug.min.js") : Url("knockout-2.2.0.debug.js");
        public static readonly string knockout_2_2_0_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/knockout-2.2.0.min.js") ? Url("knockout-2.2.0.min.js") : Url("knockout-2.2.0.js");
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public static class metro {
            private const string URLPATH = "~/Scripts/metro";
            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
            public static readonly string metro_accordion_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/metro-accordion.min.js") ? Url("metro-accordion.min.js") : Url("metro-accordion.js");
            public static readonly string metro_button_set_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/metro-button-set.min.js") ? Url("metro-button-set.min.js") : Url("metro-button-set.js");
            public static readonly string metro_calendar_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/metro-calendar.min.js") ? Url("metro-calendar.min.js") : Url("metro-calendar.js");
            public static readonly string metro_carousel_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/metro-carousel.min.js") ? Url("metro-carousel.min.js") : Url("metro-carousel.js");
            public static readonly string metro_core_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/metro-core.min.js") ? Url("metro-core.min.js") : Url("metro-core.js");
            public static readonly string metro_countdown_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/metro-countdown.min.js") ? Url("metro-countdown.min.js") : Url("metro-countdown.js");
            public static readonly string metro_date_format_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/metro-date-format.min.js") ? Url("metro-date-format.min.js") : Url("metro-date-format.js");
            public static readonly string metro_datepicker_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/metro-datepicker.min.js") ? Url("metro-datepicker.min.js") : Url("metro-datepicker.js");
            public static readonly string metro_dialog_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/metro-dialog.min.js") ? Url("metro-dialog.min.js") : Url("metro-dialog.js");
            public static readonly string metro_drag_tile_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/metro-drag-tile.min.js") ? Url("metro-drag-tile.min.js") : Url("metro-drag-tile.js");
            public static readonly string metro_dropdown_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/metro-dropdown.min.js") ? Url("metro-dropdown.min.js") : Url("metro-dropdown.js");
            public static readonly string metro_fluentmenu_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/metro-fluentmenu.min.js") ? Url("metro-fluentmenu.min.js") : Url("metro-fluentmenu.js");
            public static readonly string metro_global_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/metro-global.min.js") ? Url("metro-global.min.js") : Url("metro-global.js");
            public static readonly string metro_hint_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/metro-hint.min.js") ? Url("metro-hint.min.js") : Url("metro-hint.js");
            public static readonly string metro_initiator_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/metro-initiator.min.js") ? Url("metro-initiator.min.js") : Url("metro-initiator.js");
            public static readonly string metro_input_control_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/metro-input-control.min.js") ? Url("metro-input-control.min.js") : Url("metro-input-control.js");
            public static readonly string metro_listview_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/metro-listview.min.js") ? Url("metro-listview.min.js") : Url("metro-listview.js");
            public static readonly string metro_live_tile_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/metro-live-tile.min.js") ? Url("metro-live-tile.min.js") : Url("metro-live-tile.js");
            public static readonly string metro_loader_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/metro-loader.min.js") ? Url("metro-loader.min.js") : Url("metro-loader.js");
            public static readonly string metro_locale_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/metro-locale.min.js") ? Url("metro-locale.min.js") : Url("metro-locale.js");
            public static readonly string metro_notify_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/metro-notify.min.js") ? Url("metro-notify.min.js") : Url("metro-notify.js");
            public static readonly string metro_plugin_template_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/metro-plugin-template.min.js") ? Url("metro-plugin-template.min.js") : Url("metro-plugin-template.js");
            public static readonly string metro_progressbar_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/metro-progressbar.min.js") ? Url("metro-progressbar.min.js") : Url("metro-progressbar.js");
            public static readonly string metro_pull_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/metro-pull.min.js") ? Url("metro-pull.min.js") : Url("metro-pull.js");
            public static readonly string metro_rating_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/metro-rating.min.js") ? Url("metro-rating.min.js") : Url("metro-rating.js");
            public static readonly string metro_scroll_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/metro-scroll.min.js") ? Url("metro-scroll.min.js") : Url("metro-scroll.js");
            public static readonly string metro_slider_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/metro-slider.min.js") ? Url("metro-slider.min.js") : Url("metro-slider.js");
            public static readonly string metro_stepper_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/metro-stepper.min.js") ? Url("metro-stepper.min.js") : Url("metro-stepper.js");
            public static readonly string metro_streamer_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/metro-streamer.min.js") ? Url("metro-streamer.min.js") : Url("metro-streamer.js");
            public static readonly string metro_tab_control_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/metro-tab-control.min.js") ? Url("metro-tab-control.min.js") : Url("metro-tab-control.js");
            public static readonly string metro_table_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/metro-table.min.js") ? Url("metro-table.min.js") : Url("metro-table.js");
            public static readonly string metro_times_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/metro-times.min.js") ? Url("metro-times.min.js") : Url("metro-times.js");
            public static readonly string metro_touch_handler_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/metro-touch-handler.min.js") ? Url("metro-touch-handler.min.js") : Url("metro-touch-handler.js");
            public static readonly string metro_treeview_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/metro-treeview.min.js") ? Url("metro-treeview.min.js") : Url("metro-treeview.js");
            public static readonly string metro_wizard_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/metro-wizard.min.js") ? Url("metro-wizard.min.js") : Url("metro-wizard.js");
            public static readonly string metro_min_js = Url("metro.min.js");
            public static readonly string moment_min_js = Url("moment.min.js");
            public static readonly string README_md = Url("README.md");
        }
    
        public static readonly string metro_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/metro.min.js") ? Url("metro.min.js") : Url("metro.js");
        public static readonly string metro_min_js = Url("metro.min.js");
        public static readonly string modernizr_2_6_2_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/modernizr-2.6.2.min.js") ? Url("modernizr-2.6.2.min.js") : Url("modernizr-2.6.2.js");
        public static readonly string moment_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/moment.min.js") ? Url("moment.min.js") : Url("moment.js");
        public static readonly string moment_min_js = Url("moment.min.js");
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public static class Pages {
            private const string URLPATH = "~/Scripts/Pages";
            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
            public static readonly string AccountList_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/AccountList.min.js") ? Url("AccountList.min.js") : Url("AccountList.js");
            public static readonly string AuthenticatedLayoutShared_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/AuthenticatedLayoutShared.min.js") ? Url("AuthenticatedLayoutShared.min.js") : Url("AuthenticatedLayoutShared.js");
            public static readonly string ChangePassword_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/ChangePassword.min.js") ? Url("ChangePassword.min.js") : Url("ChangePassword.js");
            public static readonly string Claims_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/Claims.min.js") ? Url("Claims.min.js") : Url("Claims.js");
            public static readonly string HL7EntryForm_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/HL7EntryForm.min.js") ? Url("HL7EntryForm.min.js") : Url("HL7EntryForm.js");
            public static readonly string Remittance_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/Remittance.min.js") ? Url("Remittance.min.js") : Url("Remittance.js");
            public static readonly string TransactionDetails_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/TransactionDetails.min.js") ? Url("TransactionDetails.min.js") : Url("TransactionDetails.js");
            public static readonly string UserSettings_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/UserSettings.min.js") ? Url("UserSettings.min.js") : Url("UserSettings.js");
            public static readonly string Welcome_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/Welcome.min.js") ? Url("Welcome.min.js") : Url("Welcome.js");
        }
    
        public static readonly string popper_utils_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/popper-utils.min.js") ? Url("popper-utils.min.js") : Url("popper-utils.js");
        public static readonly string popper_utils_js_map = Url("popper-utils.js.map");
        public static readonly string popper_utils_min_js = Url("popper-utils.min.js");
        public static readonly string popper_utils_min_js_map = Url("popper-utils.min.js.map");
        public static readonly string popper_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/popper.min.js") ? Url("popper.min.js") : Url("popper.js");
        public static readonly string popper_js_map = Url("popper.js.map");
        public static readonly string popper_min_js = Url("popper.min.js");
        public static readonly string popper_min_js_map = Url("popper.min.js.map");
        public static readonly string README_md = Url("README.md");
        public static readonly string toastr_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/toastr.min.js") ? Url("toastr.min.js") : Url("toastr.js");
        public static readonly string toastr_min_js = Url("toastr.min.js");
        public static readonly string toastr_min_js_map = Url("toastr.min.js.map");
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public static class typings {
            private const string URLPATH = "~/Scripts/typings";
            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class jquery {
                private const string URLPATH = "~/Scripts/typings/jquery";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                public static readonly string jquery_d_ts = Url("jquery.d.ts");
            }
        
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class jquery_simplePagination {
                private const string URLPATH = "~/Scripts/typings/jquery.simplePagination";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                public static readonly string jquery_simplePagination_d_ts = Url("jquery.simplePagination.d.ts");
            }
        
        }
    
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public static class umd {
            private const string URLPATH = "~/Scripts/umd";
            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
            public static readonly string popper_utils_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/popper-utils.min.js") ? Url("popper-utils.min.js") : Url("popper-utils.js");
            public static readonly string popper_utils_js_map = Url("popper-utils.js.map");
            public static readonly string popper_utils_min_js = Url("popper-utils.min.js");
            public static readonly string popper_utils_min_js_map = Url("popper-utils.min.js.map");
            public static readonly string popper_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/popper.min.js") ? Url("popper.min.js") : Url("popper.js");
            public static readonly string popper_js_map = Url("popper.js.map");
            public static readonly string popper_min_js = Url("popper.min.js");
            public static readonly string popper_min_js_map = Url("popper.min.js.map");
        }
    
    }

    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public static class Content {
        private const string URLPATH = "~/Content";
        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
        public static readonly string bootstrap_duallistbox_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/bootstrap-duallistbox.min.css") ? Url("bootstrap-duallistbox.min.css") : Url("bootstrap-duallistbox.css");
             
        public static readonly string bootstrap_grid_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/bootstrap-grid.min.css") ? Url("bootstrap-grid.min.css") : Url("bootstrap-grid.css");
             
        public static readonly string bootstrap_grid_css_map = Url("bootstrap-grid.css.map");
        public static readonly string bootstrap_grid_min_css = Url("bootstrap-grid.min.css");
        public static readonly string bootstrap_grid_min_css_map = Url("bootstrap-grid.min.css.map");
        public static readonly string bootstrap_reboot_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/bootstrap-reboot.min.css") ? Url("bootstrap-reboot.min.css") : Url("bootstrap-reboot.css");
             
        public static readonly string bootstrap_reboot_css_map = Url("bootstrap-reboot.css.map");
        public static readonly string bootstrap_reboot_min_css = Url("bootstrap-reboot.min.css");
        public static readonly string bootstrap_reboot_min_css_map = Url("bootstrap-reboot.min.css.map");
        public static readonly string bootstrap_switch_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/bootstrap-switch.min.css") ? Url("bootstrap-switch.min.css") : Url("bootstrap-switch.css");
             
        public static readonly string bootstrap_theme_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/bootstrap-theme.min.css") ? Url("bootstrap-theme.min.css") : Url("bootstrap-theme.css");
             
        public static readonly string bootstrap_theme_min_css = Url("bootstrap-theme.min.css");
        public static readonly string bootstrap_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/bootstrap.min.css") ? Url("bootstrap.min.css") : Url("bootstrap.css");
             
        public static readonly string bootstrap_css_map = Url("bootstrap.css.map");
        public static readonly string bootstrap_min_css = Url("bootstrap.min.css");
        public static readonly string bootstrap_min_css_map = Url("bootstrap.min.css.map");
        public static readonly string chosen_sprite_png = Url("chosen-sprite.png");
        public static readonly string chosen_sprite_2x_png = Url("chosen-sprite@2x.png");
        public static readonly string chosen_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/chosen.min.css") ? Url("chosen.min.css") : Url("chosen.css");
             
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public static class DataTables_1_9_4 {
            private const string URLPATH = "~/Content/DataTables-1.9.4";
            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class docs {
                private const string URLPATH = "~/Content/DataTables-1.9.4/docs";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class media {
                    private const string URLPATH = "~/Content/DataTables-1.9.4/docs/media";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class css {
                        private const string URLPATH = "~/Content/DataTables-1.9.4/docs/media/css";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string doc_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/doc.min.css") ? Url("doc.min.css") : Url("doc.css");
                             
                        public static readonly string shCore_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/shCore.min.css") ? Url("shCore.min.css") : Url("shCore.css");
                             
                        public static readonly string shThemeDataTables_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/shThemeDataTables.min.css") ? Url("shThemeDataTables.min.css") : Url("shThemeDataTables.css");
                             
                    }
                
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class images {
                        private const string URLPATH = "~/Content/DataTables-1.9.4/docs/media/images";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string arrow_jpg = Url("arrow.jpg");
                        public static readonly string arrow_png = Url("arrow.png");
                        public static readonly string extended_png = Url("extended.png");
                    }
                
                }
            
            }
        
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class extras {
                private const string URLPATH = "~/Content/DataTables-1.9.4/extras";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class AutoFill {
                    private const string URLPATH = "~/Content/DataTables-1.9.4/extras/AutoFill";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class media {
                        private const string URLPATH = "~/Content/DataTables-1.9.4/extras/AutoFill/media";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                        public static class css {
                            private const string URLPATH = "~/Content/DataTables-1.9.4/extras/AutoFill/media/css";
                            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                            public static readonly string AutoFill_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/AutoFill.min.css") ? Url("AutoFill.min.css") : Url("AutoFill.css");
                                 
                        }
                    
                        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                        public static class docs {
                            private const string URLPATH = "~/Content/DataTables-1.9.4/extras/AutoFill/media/docs";
                            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                            public static class media {
                                private const string URLPATH = "~/Content/DataTables-1.9.4/extras/AutoFill/media/docs/media";
                                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                                public static class css {
                                    private const string URLPATH = "~/Content/DataTables-1.9.4/extras/AutoFill/media/docs/media/css";
                                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                                    public static readonly string doc_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/doc.min.css") ? Url("doc.min.css") : Url("doc.css");
                                         
                                    public static readonly string shCore_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/shCore.min.css") ? Url("shCore.min.css") : Url("shCore.css");
                                         
                                    public static readonly string shThemeDataTables_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/shThemeDataTables.min.css") ? Url("shThemeDataTables.min.css") : Url("shThemeDataTables.css");
                                         
                                }
                            
                                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                                public static class images {
                                    private const string URLPATH = "~/Content/DataTables-1.9.4/extras/AutoFill/media/docs/media/images";
                                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                                    public static readonly string arrow_jpg = Url("arrow.jpg");
                                    public static readonly string arrow_png = Url("arrow.png");
                                    public static readonly string extended_png = Url("extended.png");
                                }
                            
                            }
                        
                        }
                    
                        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                        public static class images {
                            private const string URLPATH = "~/Content/DataTables-1.9.4/extras/AutoFill/media/images";
                            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                            public static readonly string filler_png = Url("filler.png");
                        }
                    
                    }
                
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class ColReorder {
                    private const string URLPATH = "~/Content/DataTables-1.9.4/extras/ColReorder";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class media {
                        private const string URLPATH = "~/Content/DataTables-1.9.4/extras/ColReorder/media";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                        public static class css {
                            private const string URLPATH = "~/Content/DataTables-1.9.4/extras/ColReorder/media/css";
                            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                            public static readonly string ColReorder_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/ColReorder.min.css") ? Url("ColReorder.min.css") : Url("ColReorder.css");
                                 
                        }
                    
                        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                        public static class docs {
                            private const string URLPATH = "~/Content/DataTables-1.9.4/extras/ColReorder/media/docs";
                            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                            public static class media {
                                private const string URLPATH = "~/Content/DataTables-1.9.4/extras/ColReorder/media/docs/media";
                                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                                public static class css {
                                    private const string URLPATH = "~/Content/DataTables-1.9.4/extras/ColReorder/media/docs/media/css";
                                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                                    public static readonly string doc_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/doc.min.css") ? Url("doc.min.css") : Url("doc.css");
                                         
                                    public static readonly string shCore_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/shCore.min.css") ? Url("shCore.min.css") : Url("shCore.css");
                                         
                                    public static readonly string shThemeDataTables_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/shThemeDataTables.min.css") ? Url("shThemeDataTables.min.css") : Url("shThemeDataTables.css");
                                         
                                }
                            
                                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                                public static class images {
                                    private const string URLPATH = "~/Content/DataTables-1.9.4/extras/ColReorder/media/docs/media/images";
                                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                                    public static readonly string arrow_jpg = Url("arrow.jpg");
                                    public static readonly string arrow_png = Url("arrow.png");
                                    public static readonly string extended_png = Url("extended.png");
                                }
                            
                            }
                        
                        }
                    
                        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                        public static class images {
                            private const string URLPATH = "~/Content/DataTables-1.9.4/extras/ColReorder/media/images";
                            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                            public static readonly string insert_png = Url("insert.png");
                        }
                    
                    }
                
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class ColVis {
                    private const string URLPATH = "~/Content/DataTables-1.9.4/extras/ColVis";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class media {
                        private const string URLPATH = "~/Content/DataTables-1.9.4/extras/ColVis/media";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                        public static class css {
                            private const string URLPATH = "~/Content/DataTables-1.9.4/extras/ColVis/media/css";
                            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                            public static readonly string ColVis_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/ColVis.min.css") ? Url("ColVis.min.css") : Url("ColVis.css");
                                 
                            public static readonly string ColVisAlt_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/ColVisAlt.min.css") ? Url("ColVisAlt.min.css") : Url("ColVisAlt.css");
                                 
                        }
                    
                        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                        public static class docs {
                            private const string URLPATH = "~/Content/DataTables-1.9.4/extras/ColVis/media/docs";
                            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                            public static class media {
                                private const string URLPATH = "~/Content/DataTables-1.9.4/extras/ColVis/media/docs/media";
                                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                                public static class css {
                                    private const string URLPATH = "~/Content/DataTables-1.9.4/extras/ColVis/media/docs/media/css";
                                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                                    public static readonly string doc_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/doc.min.css") ? Url("doc.min.css") : Url("doc.css");
                                         
                                    public static readonly string shCore_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/shCore.min.css") ? Url("shCore.min.css") : Url("shCore.css");
                                         
                                    public static readonly string shThemeDataTables_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/shThemeDataTables.min.css") ? Url("shThemeDataTables.min.css") : Url("shThemeDataTables.css");
                                         
                                }
                            
                                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                                public static class images {
                                    private const string URLPATH = "~/Content/DataTables-1.9.4/extras/ColVis/media/docs/media/images";
                                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                                    public static readonly string arrow_jpg = Url("arrow.jpg");
                                    public static readonly string arrow_png = Url("arrow.png");
                                    public static readonly string extended_png = Url("extended.png");
                                }
                            
                            }
                        
                        }
                    
                        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                        public static class images {
                            private const string URLPATH = "~/Content/DataTables-1.9.4/extras/ColVis/media/images";
                            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                            public static readonly string button_png = Url("button.png");
                        }
                    
                    }
                
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class FixedColumns {
                    private const string URLPATH = "~/Content/DataTables-1.9.4/extras/FixedColumns";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class docs {
                        private const string URLPATH = "~/Content/DataTables-1.9.4/extras/FixedColumns/docs";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                        public static class media {
                            private const string URLPATH = "~/Content/DataTables-1.9.4/extras/FixedColumns/docs/media";
                            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                            public static class css {
                                private const string URLPATH = "~/Content/DataTables-1.9.4/extras/FixedColumns/docs/media/css";
                                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                                public static readonly string doc_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/doc.min.css") ? Url("doc.min.css") : Url("doc.css");
                                     
                                public static readonly string shCore_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/shCore.min.css") ? Url("shCore.min.css") : Url("shCore.css");
                                     
                                public static readonly string shThemeDataTables_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/shThemeDataTables.min.css") ? Url("shThemeDataTables.min.css") : Url("shThemeDataTables.css");
                                     
                            }
                        
                            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                            public static class images {
                                private const string URLPATH = "~/Content/DataTables-1.9.4/extras/FixedColumns/docs/media/images";
                                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                                public static readonly string arrow_jpg = Url("arrow.jpg");
                                public static readonly string arrow_png = Url("arrow.png");
                                public static readonly string extended_png = Url("extended.png");
                            }
                        
                        }
                    
                    }
                
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class Scroller {
                    private const string URLPATH = "~/Content/DataTables-1.9.4/extras/Scroller";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class media {
                        private const string URLPATH = "~/Content/DataTables-1.9.4/extras/Scroller/media";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                        public static class css {
                            private const string URLPATH = "~/Content/DataTables-1.9.4/extras/Scroller/media/css";
                            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                            public static readonly string dataTables_scroller_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/dataTables.scroller.min.css") ? Url("dataTables.scroller.min.css") : Url("dataTables.scroller.css");
                                 
                        }
                    
                        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                        public static class docs {
                            private const string URLPATH = "~/Content/DataTables-1.9.4/extras/Scroller/media/docs";
                            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                            public static class media {
                                private const string URLPATH = "~/Content/DataTables-1.9.4/extras/Scroller/media/docs/media";
                                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                                public static class css {
                                    private const string URLPATH = "~/Content/DataTables-1.9.4/extras/Scroller/media/docs/media/css";
                                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                                    public static readonly string doc_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/doc.min.css") ? Url("doc.min.css") : Url("doc.css");
                                         
                                    public static readonly string shCore_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/shCore.min.css") ? Url("shCore.min.css") : Url("shCore.css");
                                         
                                    public static readonly string shThemeDataTables_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/shThemeDataTables.min.css") ? Url("shThemeDataTables.min.css") : Url("shThemeDataTables.css");
                                         
                                }
                            
                                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                                public static class images {
                                    private const string URLPATH = "~/Content/DataTables-1.9.4/extras/Scroller/media/docs/media/images";
                                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                                    public static readonly string arrow_jpg = Url("arrow.jpg");
                                    public static readonly string arrow_png = Url("arrow.png");
                                    public static readonly string extended_png = Url("extended.png");
                                }
                            
                            }
                        
                        }
                    
                        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                        public static class images {
                            private const string URLPATH = "~/Content/DataTables-1.9.4/extras/Scroller/media/images";
                            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                            public static readonly string loading_background_png = Url("loading-background.png");
                        }
                    
                    }
                
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class TableTools {
                    private const string URLPATH = "~/Content/DataTables-1.9.4/extras/TableTools";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class media {
                        private const string URLPATH = "~/Content/DataTables-1.9.4/extras/TableTools/media";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                        public static class css {
                            private const string URLPATH = "~/Content/DataTables-1.9.4/extras/TableTools/media/css";
                            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                            public static readonly string TableTools_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/TableTools.min.css") ? Url("TableTools.min.css") : Url("TableTools.css");
                                 
                            public static readonly string TableTools_JUI_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/TableTools_JUI.min.css") ? Url("TableTools_JUI.min.css") : Url("TableTools_JUI.css");
                                 
                        }
                    
                        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                        public static class images {
                            private const string URLPATH = "~/Content/DataTables-1.9.4/extras/TableTools/media/images";
                            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                            public static readonly string background_png = Url("background.png");
                            public static readonly string collection_png = Url("collection.png");
                            public static readonly string collection_hover_png = Url("collection_hover.png");
                            public static readonly string copy_png = Url("copy.png");
                            public static readonly string copy_hover_png = Url("copy_hover.png");
                            public static readonly string csv_png = Url("csv.png");
                            public static readonly string csv_hover_png = Url("csv_hover.png");
                            public static readonly string pdf_png = Url("pdf.png");
                            public static readonly string pdf_hover_png = Url("pdf_hover.png");
                            public static readonly string print_png = Url("print.png");
                            public static readonly string print_hover_png = Url("print_hover.png");
                            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                            public static class psd {
                                private const string URLPATH = "~/Content/DataTables-1.9.4/extras/TableTools/media/images/psd";
                                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                                public static readonly string collection_psd = Url("collection.psd");
                                public static readonly string copy_document_psd = Url("copy document.psd");
                                public static readonly string file_types_psd = Url("file_types.psd");
                                public static readonly string printer_psd = Url("printer.psd");
                            }
                        
                            public static readonly string xls_png = Url("xls.png");
                            public static readonly string xls_hover_png = Url("xls_hover.png");
                        }
                    
                        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                        public static class swf {
                            private const string URLPATH = "~/Content/DataTables-1.9.4/extras/TableTools/media/swf";
                            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                            public static readonly string copy_csv_xls_swf = Url("copy_csv_xls.swf");
                            public static readonly string copy_csv_xls_pdf_swf = Url("copy_csv_xls_pdf.swf");
                        }
                    
                    }
                
                }
            
            }
        
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class media {
                private const string URLPATH = "~/Content/DataTables-1.9.4/media";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class css {
                    private const string URLPATH = "~/Content/DataTables-1.9.4/media/css";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    public static readonly string demo_page_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/demo_page.min.css") ? Url("demo_page.min.css") : Url("demo_page.css");
                         
                    public static readonly string demo_table_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/demo_table.min.css") ? Url("demo_table.min.css") : Url("demo_table.css");
                         
                    public static readonly string demo_table_jui_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/demo_table_jui.min.css") ? Url("demo_table_jui.min.css") : Url("demo_table_jui.css");
                         
                    public static readonly string jquery_dataTables_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.dataTables.min.css") ? Url("jquery.dataTables.min.css") : Url("jquery.dataTables.css");
                         
                    public static readonly string jquery_dataTables_themeroller_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.dataTables_themeroller.min.css") ? Url("jquery.dataTables_themeroller.min.css") : Url("jquery.dataTables_themeroller.css");
                         
                }
            
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class images {
                    private const string URLPATH = "~/Content/DataTables-1.9.4/media/images";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    public static readonly string back_disabled_png = Url("back_disabled.png");
                    public static readonly string back_enabled_png = Url("back_enabled.png");
                    public static readonly string back_enabled_hover_png = Url("back_enabled_hover.png");
                    public static readonly string favicon_ico = Url("favicon.ico");
                    public static readonly string forward_disabled_png = Url("forward_disabled.png");
                    public static readonly string forward_enabled_png = Url("forward_enabled.png");
                    public static readonly string forward_enabled_hover_png = Url("forward_enabled_hover.png");
                    public static readonly string sort_asc_png = Url("sort_asc.png");
                    public static readonly string sort_asc_disabled_png = Url("sort_asc_disabled.png");
                    public static readonly string sort_both_png = Url("sort_both.png");
                    public static readonly string sort_desc_png = Url("sort_desc.png");
                    public static readonly string sort_desc_disabled_png = Url("sort_desc_disabled.png");
                    public static readonly string Sorting_icons_psd = Url("Sorting icons.psd");
                }
            
            }
        
        }
    
        public static readonly string dataTables_bootstrap_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/dataTables.bootstrap.min.css") ? Url("dataTables.bootstrap.min.css") : Url("dataTables.bootstrap.css");
             
        public static readonly string daterangepicker_bs2_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/daterangepicker-bs2.min.css") ? Url("daterangepicker-bs2.min.css") : Url("daterangepicker-bs2.css");
             
        public static readonly string daterangepicker_bs3_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/daterangepicker-bs3.min.css") ? Url("daterangepicker-bs3.min.css") : Url("daterangepicker-bs3.css");
             
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public static class Images {
            private const string URLPATH = "~/Content/Images";
            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
            public static readonly string forward_disabled_jpg = Url("forward_disabled.jpg");
            public static readonly string forward_enabled_jpg = Url("forward_enabled.jpg");
            public static readonly string medic_bg_jpg = Url("medic_bg.jpg");
            public static readonly string ui_icons_888888_256x240_png = Url("ui-icons_888888_256x240.png");
        }
    
        public static readonly string metro_bootstrap_responsive_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/metro-bootstrap-responsive.min.css") ? Url("metro-bootstrap-responsive.min.css") : Url("metro-bootstrap-responsive.css");
             
        public static readonly string metro_bootstrap_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/metro-bootstrap.min.css") ? Url("metro-bootstrap.min.css") : Url("metro-bootstrap.css");
             
        public static readonly string metro_colors_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/metro-colors.min.css") ? Url("metro-colors.min.css") : Url("metro-colors.css");
             
        public static readonly string metro_colors_min_css = Url("metro-colors.min.css");
        public static readonly string metro_icons_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/metro-icons.min.css") ? Url("metro-icons.min.css") : Url("metro-icons.css");
             
        public static readonly string metro_icons_min_css = Url("metro-icons.min.css");
        public static readonly string metro_responsive_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/metro-responsive.min.css") ? Url("metro-responsive.min.css") : Url("metro-responsive.css");
             
        public static readonly string metro_responsive_min_css = Url("metro-responsive.min.css");
        public static readonly string metro_rtl_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/metro-rtl.min.css") ? Url("metro-rtl.min.css") : Url("metro-rtl.css");
             
        public static readonly string metro_rtl_min_css = Url("metro-rtl.min.css");
        public static readonly string metro_schemes_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/metro-schemes.min.css") ? Url("metro-schemes.min.css") : Url("metro-schemes.css");
             
        public static readonly string metro_schemes_min_css = Url("metro-schemes.min.css");
        public static readonly string metro_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/metro.min.css") ? Url("metro.min.css") : Url("metro.css");
             
        public static readonly string metro_eot = Url("metro.eot");
        public static readonly string metro_min_css = Url("metro.min.css");
        public static readonly string metro_svg = Url("metro.svg");
        public static readonly string metro_ttf = Url("metro.ttf");
        public static readonly string metro_woff = Url("metro.woff");
        public static readonly string Site_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/Site.min.css") ? Url("Site.min.css") : Url("Site.css");
             
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public static class themes {
            private const string URLPATH = "~/Content/themes";
            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class @base {
                private const string URLPATH = "~/Content/themes/base";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class images {
                    private const string URLPATH = "~/Content/themes/base/images";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    public static readonly string ui_bg_flat_0_aaaaaa_40x100_png = Url("ui-bg_flat_0_aaaaaa_40x100.png");
                    public static readonly string ui_bg_flat_75_ffffff_40x100_png = Url("ui-bg_flat_75_ffffff_40x100.png");
                    public static readonly string ui_bg_glass_55_fbf9ee_1x400_png = Url("ui-bg_glass_55_fbf9ee_1x400.png");
                    public static readonly string ui_bg_glass_65_ffffff_1x400_png = Url("ui-bg_glass_65_ffffff_1x400.png");
                    public static readonly string ui_bg_glass_75_dadada_1x400_png = Url("ui-bg_glass_75_dadada_1x400.png");
                    public static readonly string ui_bg_glass_75_e6e6e6_1x400_png = Url("ui-bg_glass_75_e6e6e6_1x400.png");
                    public static readonly string ui_bg_glass_95_fef1ec_1x400_png = Url("ui-bg_glass_95_fef1ec_1x400.png");
                    public static readonly string ui_bg_highlight_soft_75_cccccc_1x100_png = Url("ui-bg_highlight-soft_75_cccccc_1x100.png");
                    public static readonly string ui_icons_222222_256x240_png = Url("ui-icons_222222_256x240.png");
                    public static readonly string ui_icons_2e83ff_256x240_png = Url("ui-icons_2e83ff_256x240.png");
                    public static readonly string ui_icons_454545_256x240_png = Url("ui-icons_454545_256x240.png");
                    public static readonly string ui_icons_888888_256x240_png = Url("ui-icons_888888_256x240.png");
                    public static readonly string ui_icons_cd0a0a_256x240_png = Url("ui-icons_cd0a0a_256x240.png");
                }
            
                public static readonly string jquery_ui_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery-ui.min.css") ? Url("jquery-ui.min.css") : Url("jquery-ui.css");
                     
                public static readonly string jquery_ui_accordion_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.ui.accordion.min.css") ? Url("jquery.ui.accordion.min.css") : Url("jquery.ui.accordion.css");
                     
                public static readonly string jquery_ui_all_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.ui.all.min.css") ? Url("jquery.ui.all.min.css") : Url("jquery.ui.all.css");
                     
                public static readonly string jquery_ui_autocomplete_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.ui.autocomplete.min.css") ? Url("jquery.ui.autocomplete.min.css") : Url("jquery.ui.autocomplete.css");
                     
                public static readonly string jquery_ui_base_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.ui.base.min.css") ? Url("jquery.ui.base.min.css") : Url("jquery.ui.base.css");
                     
                public static readonly string jquery_ui_button_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.ui.button.min.css") ? Url("jquery.ui.button.min.css") : Url("jquery.ui.button.css");
                     
                public static readonly string jquery_ui_core_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.ui.core.min.css") ? Url("jquery.ui.core.min.css") : Url("jquery.ui.core.css");
                     
                public static readonly string jquery_ui_datepicker_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.ui.datepicker.min.css") ? Url("jquery.ui.datepicker.min.css") : Url("jquery.ui.datepicker.css");
                     
                public static readonly string jquery_ui_dialog_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.ui.dialog.min.css") ? Url("jquery.ui.dialog.min.css") : Url("jquery.ui.dialog.css");
                     
                public static readonly string jquery_ui_progressbar_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.ui.progressbar.min.css") ? Url("jquery.ui.progressbar.min.css") : Url("jquery.ui.progressbar.css");
                     
                public static readonly string jquery_ui_resizable_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.ui.resizable.min.css") ? Url("jquery.ui.resizable.min.css") : Url("jquery.ui.resizable.css");
                     
                public static readonly string jquery_ui_selectable_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.ui.selectable.min.css") ? Url("jquery.ui.selectable.min.css") : Url("jquery.ui.selectable.css");
                     
                public static readonly string jquery_ui_slider_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.ui.slider.min.css") ? Url("jquery.ui.slider.min.css") : Url("jquery.ui.slider.css");
                     
                public static readonly string jquery_ui_tabs_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.ui.tabs.min.css") ? Url("jquery.ui.tabs.min.css") : Url("jquery.ui.tabs.css");
                     
                public static readonly string jquery_ui_theme_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/jquery.ui.theme.min.css") ? Url("jquery.ui.theme.min.css") : Url("jquery.ui.theme.css");
                     
                [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                public static class minified {
                    private const string URLPATH = "~/Content/themes/base/minified";
                    public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                    public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
                    public static class images {
                        private const string URLPATH = "~/Content/themes/base/minified/images";
                        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                        public static readonly string ui_bg_flat_0_aaaaaa_40x100_png = Url("ui-bg_flat_0_aaaaaa_40x100.png");
                        public static readonly string ui_bg_flat_75_ffffff_40x100_png = Url("ui-bg_flat_75_ffffff_40x100.png");
                        public static readonly string ui_bg_glass_55_fbf9ee_1x400_png = Url("ui-bg_glass_55_fbf9ee_1x400.png");
                        public static readonly string ui_bg_glass_65_ffffff_1x400_png = Url("ui-bg_glass_65_ffffff_1x400.png");
                        public static readonly string ui_bg_glass_75_dadada_1x400_png = Url("ui-bg_glass_75_dadada_1x400.png");
                        public static readonly string ui_bg_glass_75_e6e6e6_1x400_png = Url("ui-bg_glass_75_e6e6e6_1x400.png");
                        public static readonly string ui_bg_glass_95_fef1ec_1x400_png = Url("ui-bg_glass_95_fef1ec_1x400.png");
                        public static readonly string ui_bg_highlight_soft_75_cccccc_1x100_png = Url("ui-bg_highlight-soft_75_cccccc_1x100.png");
                        public static readonly string ui_icons_222222_256x240_png = Url("ui-icons_222222_256x240.png");
                        public static readonly string ui_icons_2e83ff_256x240_png = Url("ui-icons_2e83ff_256x240.png");
                        public static readonly string ui_icons_454545_256x240_png = Url("ui-icons_454545_256x240.png");
                        public static readonly string ui_icons_888888_256x240_png = Url("ui-icons_888888_256x240.png");
                        public static readonly string ui_icons_cd0a0a_256x240_png = Url("ui-icons_cd0a0a_256x240.png");
                    }
                
                    public static readonly string jquery_ui_min_css = Url("jquery-ui.min.css");
                    public static readonly string jquery_ui_accordion_min_css = Url("jquery.ui.accordion.min.css");
                    public static readonly string jquery_ui_autocomplete_min_css = Url("jquery.ui.autocomplete.min.css");
                    public static readonly string jquery_ui_button_min_css = Url("jquery.ui.button.min.css");
                    public static readonly string jquery_ui_core_min_css = Url("jquery.ui.core.min.css");
                    public static readonly string jquery_ui_datepicker_min_css = Url("jquery.ui.datepicker.min.css");
                    public static readonly string jquery_ui_dialog_min_css = Url("jquery.ui.dialog.min.css");
                    public static readonly string jquery_ui_progressbar_min_css = Url("jquery.ui.progressbar.min.css");
                    public static readonly string jquery_ui_resizable_min_css = Url("jquery.ui.resizable.min.css");
                    public static readonly string jquery_ui_selectable_min_css = Url("jquery.ui.selectable.min.css");
                    public static readonly string jquery_ui_slider_min_css = Url("jquery.ui.slider.min.css");
                    public static readonly string jquery_ui_tabs_min_css = Url("jquery.ui.tabs.min.css");
                    public static readonly string jquery_ui_theme_min_css = Url("jquery.ui.theme.min.css");
                }
            
            }
        
        }
    
        public static readonly string toastr_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/toastr.min.css") ? Url("toastr.min.css") : Url("toastr.css");
             
        public static readonly string toastr_less = Url("toastr.less");
        public static readonly string toastr_min_css = Url("toastr.min.css");
    }

    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public static partial class Bundles
    {
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public static partial class Scripts {}
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public static partial class Styles {}
    }
}

[GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
internal static class T4MVCHelpers {
    // You can change the ProcessVirtualPath method to modify the path that gets returned to the client.
    // e.g. you can prepend a domain, or append a query string:
    //      return "http://localhost" + path + "?foo=bar";
    private static string ProcessVirtualPathDefault(string virtualPath) {
        // The path that comes in starts with ~/ and must first be made absolute
        string path = VirtualPathUtility.ToAbsolute(virtualPath);
        
        // Add your own modifications here before returning the path
        return path;
    }

    // Calling ProcessVirtualPath through delegate to allow it to be replaced for unit testing
    public static Func<string, string> ProcessVirtualPath = ProcessVirtualPathDefault;

    // Calling T4Extension.TimestampString through delegate to allow it to be replaced for unit testing and other purposes
    public static Func<string, string> TimestampString = System.Web.Mvc.T4Extensions.TimestampString;

    // Logic to determine if the app is running in production or dev environment
    public static bool IsProduction() { 
        return (HttpContext.Current != null && !HttpContext.Current.IsDebuggingEnabled); 
    }
}





#endregion T4MVC
#pragma warning restore 1591


